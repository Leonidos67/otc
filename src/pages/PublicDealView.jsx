import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import './PageStyles.css';
import { 
  getDealFromUrl, 
  formatDate, 
  joinDeal, 
  confirmReadiness, 
  completeDeal,
  getOrCreateUserId,
  createPublicDealUrl,
  getPublicDeal,
  fetchDealFromApi,
  confirmDealOnApi
} from '../utils/dealUtils';

const PublicDealView = () => {
  const { dealId } = useParams();
  const navigate = useNavigate();
  const [deal, setDeal] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [currentUserId, setCurrentUserId] = useState(null);

  useEffect(() => {
    const load = async () => {
      if (!dealId) return;
      console.log('–ü–æ–∏—Å–∫ –ø—É–±–ª–∏—á–Ω–æ–π —Å–¥–µ–ª–∫–∏ —Å ID:', dealId);
      const userId = getOrCreateUserId();
      setCurrentUserId(userId);
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ API, –∑–∞—Ç–µ–º fallback
      const apiDeal = await getPublicDeal(dealId);
      console.log('–ù–∞–π–¥–µ–Ω–Ω–∞—è —Å–¥–µ–ª–∫–∞:', apiDeal);

      if (apiDeal) {
        setDeal(apiDeal);
      } else {
        setError(`–°–¥–µ–ª–∫–∞ —Å ID "${dealId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∏–ª–∏ —Å–¥–µ–ª–∫–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.`);
      }
      setLoading(false);
    };
    load();
  }, [dealId]);

  const copyDealLink = () => {
    const dealUrl = createPublicDealUrl(dealId);
    navigator.clipboard.writeText(dealUrl).then(() => {
      alert('–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    }).catch(() => {
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      const textArea = document.createElement('textarea');
      textArea.value = dealUrl;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      alert('–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    });
  };

  const handleJoinDeal = async () => {
    try {
      const res = await fetch((process.env.REACT_APP_API_URL || '/api') + `/deals/${dealId}/take`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ takerId: currentUserId })
      });
      if (!res.ok) {
        const err = await res.json().catch(() => ({}));
        alert(err.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–¥–µ–ª–∫–µ');
        return;
      }
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –∏–∑ API
      const updated = await fetchDealFromApi(dealId);
      if (updated) setDeal(updated);
      alert('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–¥–µ–ª–∫–µ!');
    } catch (_e) {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–¥–µ–ª–∫–µ');
    }
  };

  const handleConfirmReadiness = async (ready) => {
    if (!ready) {
      alert('–û—Ç–º–µ–Ω–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –±–µ–∫–µ–Ω–¥');
      return;
    }
    const updated = await confirmDealOnApi(dealId, currentUserId);
    if (updated) {
      setDeal(updated);
      alert('–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!');
    } else {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å');
    }
  };

  const handleCompleteDeal = () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É?')) {
      if (completeDeal(dealId, currentUserId)) {
        alert('–°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏
        const updatedDeal = getDealFromUrl(dealId);
        setDeal(updatedDeal);
      } else {
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É');
      }
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–¥–µ–ª–∫–µ
  const isCreator = deal && deal.creatorId === currentUserId;
  const isParticipant = deal && deal.participants.participant && deal.participants.participant.id === currentUserId;
  const canJoin = deal && deal.status === 'waiting_for_participant' && !isCreator && !isParticipant;
  const isInDeal = isCreator || isParticipant;

  if (loading) {
    return (
      <div className="p-6 profile-page">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–¥–µ–ª–∫–∏...</div>
      </div>
    );
  }

  if (error || !deal) {
    return (
      <div className="p-6 profile-page">
        <h1 className="profile-page-title">–°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
        <hr className="divider" style={{ marginTop: '8px' }} />
        <div className="content-box">
          <div className="empty-state">
            <h3>–°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3>
            <p>{error}</p>
            <div style={{ marginTop: '20px', display: 'flex', flexDirection: 'column', gap: '10px' }}>
              <button 
                onClick={() => window.location.href = '/'}
                className="success-button"
              >
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  const paymentBadge = deal.payment && deal.payment.transferredBy
    ? (
      <span className="status-badge paid" title={`–û–ø–ª–∞—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${deal.payment.transferredBy} –Ω–∞ —Å—É–º–º—É ${deal.payment.amount}`}>
        üí∏ –î–µ–Ω—å–≥–∏ –ø–µ—Ä–µ–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      </span>
    ) : null;

  return (
    <div className="p-6 profile-page">
      <div className="profile-page-title" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
        <span>–ü—É–±–ª–∏—á–Ω–∞—è —Å–¥–µ–ª–∫–∞ #{dealId.split('_')[1] || dealId}</span>
      </div>
      <hr className="divider" style={{ marginTop: '8px' }} />

      {/* –°–≤–æ–¥–∫–∞ + –ø—Ä–∞–≤—ã–µ –±–ª–æ–∫–∏ –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ */}
      <div className="public-deal-grid">
        {/* –õ–µ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü: –°—É–º–º–∞ + –ò–∫–æ–Ω–∫–∞ + –ü–æ–¥–∞—Ä–∫–∏ */}
        <div>
          <div
            className="deal-summary-bar"
            style={{
              padding: '12px 16px',
              marginBottom: 20,
            }}
          >
            {/* –°—É–º–º–∞ */}
            <div className="summary-amount">
              <div className="summary-label">–°—É–º–º–∞</div>
              <div className="summary-value">{deal.amount}</div>
            </div>

            {/* –ò–∫–æ–Ω–∫–∞ –æ–±–º–µ–Ω–∞ */}
            <div className="summary-exchange" aria-hidden>
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <path d="M3 16l4 4 4-4"/>
                <path d="M7 20V4"/>
                <path d="M21 8l-4-4-4 4"/>
                <path d="M17 4v16"/>
              </svg>
            </div>

            {/* –ü–æ–¥–∞—Ä–∫–∏ */}
            <div className="summary-gifts">
              {deal.gifts && deal.gifts.length > 0 ? (
                deal.gifts.map((gift, idx) => (
                  <img key={idx} className="summary-gift-img" src={gift.img} alt={gift.title} />
                ))
              ) : (
                <span className="summary-gifts-empty">–ü–æ–¥–∞—Ä–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</span>
              )}
            </div>
          </div>
        </div>

        {/* –ü—Ä–∞–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü: –£—á–∞—Å—Ç–Ω–∏–∫–∏ + NFT –ü–æ–¥–∞—Ä–∫–∏ */}
        <div className="public-deal-right">
          {/* –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–¥–µ–ª–∫–∏ */}
          <div className="deal-participants-card">
            <h2>–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–¥–µ–ª–∫–∏</h2>
            <div className="participants-list">
              <div className="participant-item">
                <div className="participant-info">
                  <div className="participant-role">–°–æ–∑–¥–∞—Ç–µ–ª—å</div>
                  <div className="participant-id">{deal.participants.creator.id}</div>
                </div>
                <div className="participant-status">
                  <span className={`readiness-badge ${deal.participants.creator.ready ? 'ready' : 'not-ready'}`}>
                    {deal.participants.creator.ready ? '–ì–æ—Ç–æ–≤' : '–ù–µ –≥–æ—Ç–æ–≤'}
                  </span>
                </div>
              </div>
              
              {deal.participants.participant ? (
                <div className="participant-item">
                  <div className="participant-info">
                    <div className="participant-role">–£—á–∞—Å—Ç–Ω–∏–∫</div>
                    <div className="participant-id">{deal.participants.participant.id}</div>
                  </div>
                  <div className="participant-status">
                    <span className={`readiness-badge ${deal.participants.participant.ready ? 'ready' : 'not-ready'}`}>
                      {deal.participants.participant.ready ? '–ì–æ—Ç–æ–≤' : '–ù–µ –≥–æ—Ç–æ–≤'}
                    </span>
                  </div>
                </div>
              ) : (
                <div className="participant-item">
                  <div className="participant-info">
                    <div className="participant-role">–£—á–∞—Å—Ç–Ω–∏–∫</div>
                    <div className="participant-id">–û–∂–∏–¥–∞–µ—Ç—Å—è</div>
                  </div>
                  <div className="participant-status">
                    <span className="readiness-badge waiting">–û–∂–∏–¥–∞–µ—Ç—Å—è</span>
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* NFT –ü–æ–¥–∞—Ä–∫–∏ */}
          <div className="deal-gifts-card">
            <h2>NFT –ü–æ–¥–∞—Ä–∫–∏</h2>
            <div className="gifts-grid">
              {deal.gifts.map((gift, index) => (
                <div key={index} className="gift-item">
                  <img 
                    src={gift.img} 
                    alt={gift.title}
                    className="gift-image"
                  />
                  <div className="gift-title">{gift.title}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏ ‚Äî –≤–æ –≤—Å—é —à–∏—Ä–∏–Ω—É –Ω–∏–∂–µ */}
      <div className="deal-info-card">
        <div className="deal-header">
          <div className="deal-status">
            <span className={`status-badge ${deal.status}`}>
              {deal.status === 'waiting_for_participant' ? '–û–∂–∏–¥–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞' :
               deal.status === 'waiting_for_confirmation' ? '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è' :
               deal.status === 'in_progress' ? '–í –ø—Ä–æ—Ü–µ—Å—Å–µ' :
               deal.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω–∞' : 
               deal.status === 'cancelled' ? '–û—Ç–º–µ–Ω–µ–Ω–∞' : deal.status}
            </span>
          </div>
          <div className="deal-date">
            –°–æ–∑–¥–∞–Ω–∞: {formatDate(deal.createdAt)}
          </div>
        </div>

        <div className="deal-details">
          <h2>–î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏</h2>
          <div className="details-grid">
            <div className="detail-item">
              <span className="detail-label">–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:</span>
              <span className="detail-value">{deal.method}</span>
            </div>
            <div className="detail-item">
              <span className="detail-label">–°—É–º–º–∞:</span>
              <span className="detail-value">{deal.amount}</span>
            </div>
            <div className="detail-item">
              <span className="detail-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤:</span>
              <span className="detail-value">{deal.gifts.length}</span>
            </div>
            <div className="detail-item">
              <span className="detail-label">ID —Å–¥–µ–ª–∫–∏:</span>
              <span className="detail-value deal-id">{deal.id}</span>
            </div>
          </div>
        </div>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="deal-actions-card">
        <h2>–î–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="actions-grid">
          <button 
            onClick={copyDealLink}
            className="action-button primary"
          >
            üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
          </button>
          
          {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–¥–µ–ª–∫–µ */}
          {canJoin && (
            <button 
              onClick={handleJoinDeal}
              className="action-button success"
            >
              ‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–¥–µ–ª–∫–µ
            </button>
          )}
          
          {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ */}
          {isInDeal && (deal.status === 'waiting_for_confirmation' || deal.status === 'in_progress') && (
            <>
              <button 
                onClick={() => handleConfirmReadiness(true)}
                className="action-button success"
                disabled={isCreator ? deal.participants.creator.ready : deal.participants.participant?.ready}
              >
                ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
              </button>
              <button 
                onClick={() => handleConfirmReadiness(false)}
                className="action-button warning"
                disabled={isCreator ? !deal.participants.creator.ready : !deal.participants.participant?.ready}
              >
                ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
              </button>
            </>
          )}
          
          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ */}
          {isInDeal && deal.status === 'in_progress' && (
            <button 
              onClick={handleCompleteDeal}
              className="action-button success"
            >
              üéâ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default PublicDealView;
